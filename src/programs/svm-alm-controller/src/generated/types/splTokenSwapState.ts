/**
 * This code was AUTOGENERATED using the Codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun Codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  fixDecoderSize,
  fixEncoderSize,
  getBytesDecoder,
  getBytesEncoder,
  getStructDecoder,
  getStructEncoder,
  getU64Decoder,
  getU64Encoder,
  type FixedSizeCodec,
  type FixedSizeDecoder,
  type FixedSizeEncoder,
  type ReadonlyUint8Array,
} from '@solana/kit';

export type SplTokenSwapState = {
  lastBalanceA: bigint;
  lastBalanceB: bigint;
  lastBalanceLp: bigint;
  padding: ReadonlyUint8Array;
};

export type SplTokenSwapStateArgs = {
  lastBalanceA: number | bigint;
  lastBalanceB: number | bigint;
  lastBalanceLp: number | bigint;
  padding: ReadonlyUint8Array;
};

export function getSplTokenSwapStateEncoder(): FixedSizeEncoder<SplTokenSwapStateArgs> {
  return getStructEncoder([
    ['lastBalanceA', getU64Encoder()],
    ['lastBalanceB', getU64Encoder()],
    ['lastBalanceLp', getU64Encoder()],
    ['padding', fixEncoderSize(getBytesEncoder(), 24)],
  ]);
}

export function getSplTokenSwapStateDecoder(): FixedSizeDecoder<SplTokenSwapState> {
  return getStructDecoder([
    ['lastBalanceA', getU64Decoder()],
    ['lastBalanceB', getU64Decoder()],
    ['lastBalanceLp', getU64Decoder()],
    ['padding', fixDecoderSize(getBytesDecoder(), 24)],
  ]);
}

export function getSplTokenSwapStateCodec(): FixedSizeCodec<
  SplTokenSwapStateArgs,
  SplTokenSwapState
> {
  return combineCodec(
    getSplTokenSwapStateEncoder(),
    getSplTokenSwapStateDecoder()
  );
}
