/**
 * This code was AUTOGENERATED using the Codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun Codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  fixDecoderSize,
  fixEncoderSize,
  getAddressDecoder,
  getAddressEncoder,
  getBytesDecoder,
  getBytesEncoder,
  getStructDecoder,
  getStructEncoder,
  getU32Decoder,
  getU32Encoder,
  type Address,
  type FixedSizeCodec,
  type FixedSizeDecoder,
  type FixedSizeEncoder,
  type ReadonlyUint8Array,
} from '@solana/kit';

export type CctpBridgeConfig = {
  cctpTokenMessengerMinter: Address;
  cctpMessageTransmitter: Address;
  mint: Address;
  destinationAddress: Address;
  destinationDomain: number;
  padding: ReadonlyUint8Array;
};

export type CctpBridgeConfigArgs = CctpBridgeConfig;

export function getCctpBridgeConfigEncoder(): FixedSizeEncoder<CctpBridgeConfigArgs> {
  return getStructEncoder([
    ['cctpTokenMessengerMinter', getAddressEncoder()],
    ['cctpMessageTransmitter', getAddressEncoder()],
    ['mint', getAddressEncoder()],
    ['destinationAddress', getAddressEncoder()],
    ['destinationDomain', getU32Encoder()],
    ['padding', fixEncoderSize(getBytesEncoder(), 92)],
  ]);
}

export function getCctpBridgeConfigDecoder(): FixedSizeDecoder<CctpBridgeConfig> {
  return getStructDecoder([
    ['cctpTokenMessengerMinter', getAddressDecoder()],
    ['cctpMessageTransmitter', getAddressDecoder()],
    ['mint', getAddressDecoder()],
    ['destinationAddress', getAddressDecoder()],
    ['destinationDomain', getU32Decoder()],
    ['padding', fixDecoderSize(getBytesDecoder(), 92)],
  ]);
}

export function getCctpBridgeConfigCodec(): FixedSizeCodec<
  CctpBridgeConfigArgs,
  CctpBridgeConfig
> {
  return combineCodec(
    getCctpBridgeConfigEncoder(),
    getCctpBridgeConfigDecoder()
  );
}
