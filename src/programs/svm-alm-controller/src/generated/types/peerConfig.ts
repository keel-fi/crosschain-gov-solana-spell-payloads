/**
 * This code was AUTOGENERATED using the Codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun Codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  fixDecoderSize,
  fixEncoderSize,
  getBytesDecoder,
  getBytesEncoder,
  getStructDecoder,
  getStructEncoder,
  type FixedSizeCodec,
  type FixedSizeDecoder,
  type FixedSizeEncoder,
  type ReadonlyUint8Array,
} from '@solana/kit';

export type PeerConfig = { peerAddress: ReadonlyUint8Array };

export type PeerConfigArgs = PeerConfig;

export function getPeerConfigEncoder(): FixedSizeEncoder<PeerConfigArgs> {
  return getStructEncoder([
    ['peerAddress', fixEncoderSize(getBytesEncoder(), 32)],
  ]);
}

export function getPeerConfigDecoder(): FixedSizeDecoder<PeerConfig> {
  return getStructDecoder([
    ['peerAddress', fixDecoderSize(getBytesDecoder(), 32)],
  ]);
}

export function getPeerConfigCodec(): FixedSizeCodec<
  PeerConfigArgs,
  PeerConfig
> {
  return combineCodec(getPeerConfigEncoder(), getPeerConfigDecoder());
}
