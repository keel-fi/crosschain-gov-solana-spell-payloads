/**
 * This code was AUTOGENERATED using the Codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun Codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  fixDecoderSize,
  fixEncoderSize,
  getAddressDecoder,
  getAddressEncoder,
  getBytesDecoder,
  getBytesEncoder,
  getStructDecoder,
  getStructEncoder,
  type Address,
  type FixedSizeCodec,
  type FixedSizeDecoder,
  type FixedSizeEncoder,
  type ReadonlyUint8Array,
} from '@solana/kit';

export type SplTokenSwapConfig = {
  program: Address;
  swap: Address;
  mintA: Address;
  mintB: Address;
  lpMint: Address;
  lpTokenAccount: Address;
  padding: ReadonlyUint8Array;
};

export type SplTokenSwapConfigArgs = SplTokenSwapConfig;

export function getSplTokenSwapConfigEncoder(): FixedSizeEncoder<SplTokenSwapConfigArgs> {
  return getStructEncoder([
    ['program', getAddressEncoder()],
    ['swap', getAddressEncoder()],
    ['mintA', getAddressEncoder()],
    ['mintB', getAddressEncoder()],
    ['lpMint', getAddressEncoder()],
    ['lpTokenAccount', getAddressEncoder()],
    ['padding', fixEncoderSize(getBytesEncoder(), 32)],
  ]);
}

export function getSplTokenSwapConfigDecoder(): FixedSizeDecoder<SplTokenSwapConfig> {
  return getStructDecoder([
    ['program', getAddressDecoder()],
    ['swap', getAddressDecoder()],
    ['mintA', getAddressDecoder()],
    ['mintB', getAddressDecoder()],
    ['lpMint', getAddressDecoder()],
    ['lpTokenAccount', getAddressDecoder()],
    ['padding', fixDecoderSize(getBytesDecoder(), 32)],
  ]);
}

export function getSplTokenSwapConfigCodec(): FixedSizeCodec<
  SplTokenSwapConfigArgs,
  SplTokenSwapConfig
> {
  return combineCodec(
    getSplTokenSwapConfigEncoder(),
    getSplTokenSwapConfigDecoder()
  );
}
