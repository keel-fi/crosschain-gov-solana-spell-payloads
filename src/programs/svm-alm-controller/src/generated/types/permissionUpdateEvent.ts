/**
 * This code was AUTOGENERATED using the Codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun Codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getAddressDecoder,
  getAddressEncoder,
  getOptionDecoder,
  getOptionEncoder,
  getStructDecoder,
  getStructEncoder,
  type Address,
  type Codec,
  type Decoder,
  type Encoder,
  type Option,
  type OptionOrNullable,
} from '@solana/kit';
import {
  getPermissionDecoder,
  getPermissionEncoder,
  type Permission,
  type PermissionArgs,
} from '../accounts';

export type PermissionUpdateEvent = {
  authority: Address;
  controller: Address;
  permission: Address;
  oldState: Option<Permission>;
  newState: Option<Permission>;
};

export type PermissionUpdateEventArgs = {
  authority: Address;
  controller: Address;
  permission: Address;
  oldState: OptionOrNullable<PermissionArgs>;
  newState: OptionOrNullable<PermissionArgs>;
};

export function getPermissionUpdateEventEncoder(): Encoder<PermissionUpdateEventArgs> {
  return getStructEncoder([
    ['authority', getAddressEncoder()],
    ['controller', getAddressEncoder()],
    ['permission', getAddressEncoder()],
    ['oldState', getOptionEncoder(getPermissionEncoder())],
    ['newState', getOptionEncoder(getPermissionEncoder())],
  ]);
}

export function getPermissionUpdateEventDecoder(): Decoder<PermissionUpdateEvent> {
  return getStructDecoder([
    ['authority', getAddressDecoder()],
    ['controller', getAddressDecoder()],
    ['permission', getAddressDecoder()],
    ['oldState', getOptionDecoder(getPermissionDecoder())],
    ['newState', getOptionDecoder(getPermissionDecoder())],
  ]);
}

export function getPermissionUpdateEventCodec(): Codec<
  PermissionUpdateEventArgs,
  PermissionUpdateEvent
> {
  return combineCodec(
    getPermissionUpdateEventEncoder(),
    getPermissionUpdateEventDecoder()
  );
}
