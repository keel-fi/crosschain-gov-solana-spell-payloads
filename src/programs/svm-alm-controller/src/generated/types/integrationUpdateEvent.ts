/**
 * This code was AUTOGENERATED using the Codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun Codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getAddressDecoder,
  getAddressEncoder,
  getOptionDecoder,
  getOptionEncoder,
  getStructDecoder,
  getStructEncoder,
  type Address,
  type Codec,
  type Decoder,
  type Encoder,
  type Option,
  type OptionOrNullable,
} from '@solana/kit';
import {
  getIntegrationDecoder,
  getIntegrationEncoder,
  type Integration,
  type IntegrationArgs,
} from '..';

export type IntegrationUpdateEvent = {
  authority: Address;
  controller: Address;
  integration: Address;
  oldState: Option<Integration>;
  newState: Option<Integration>;
};

export type IntegrationUpdateEventArgs = {
  authority: Address;
  controller: Address;
  integration: Address;
  oldState: OptionOrNullable<IntegrationArgs>;
  newState: OptionOrNullable<IntegrationArgs>;
};

export function getIntegrationUpdateEventEncoder(): Encoder<IntegrationUpdateEventArgs> {
  return getStructEncoder([
    ['authority', getAddressEncoder()],
    ['controller', getAddressEncoder()],
    ['integration', getAddressEncoder()],
    ['oldState', getOptionEncoder(getIntegrationEncoder())],
    ['newState', getOptionEncoder(getIntegrationEncoder())],
  ]);
}

export function getIntegrationUpdateEventDecoder(): Decoder<IntegrationUpdateEvent> {
  return getStructDecoder([
    ['authority', getAddressDecoder()],
    ['controller', getAddressDecoder()],
    ['integration', getAddressDecoder()],
    ['oldState', getOptionDecoder(getIntegrationDecoder())],
    ['newState', getOptionDecoder(getIntegrationDecoder())],
  ]);
}

export function getIntegrationUpdateEventCodec(): Codec<
  IntegrationUpdateEventArgs,
  IntegrationUpdateEvent
> {
  return combineCodec(
    getIntegrationUpdateEventEncoder(),
    getIntegrationUpdateEventDecoder()
  );
}
