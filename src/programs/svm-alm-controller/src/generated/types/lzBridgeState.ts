/**
 * This code was AUTOGENERATED using the Codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun Codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  fixDecoderSize,
  fixEncoderSize,
  getBooleanDecoder,
  getBooleanEncoder,
  getBytesDecoder,
  getBytesEncoder,
  getStructDecoder,
  getStructEncoder,
  type FixedSizeCodec,
  type FixedSizeDecoder,
  type FixedSizeEncoder,
  type ReadonlyUint8Array,
} from '@solana/kit';

export type LzBridgeState = {
  pushInFlight: boolean;
  padding: ReadonlyUint8Array;
};

export type LzBridgeStateArgs = LzBridgeState;

export function getLzBridgeStateEncoder(): FixedSizeEncoder<LzBridgeStateArgs> {
  return getStructEncoder([
    ['pushInFlight', getBooleanEncoder()],
    ['padding', fixEncoderSize(getBytesEncoder(), 47)],
  ]);
}

export function getLzBridgeStateDecoder(): FixedSizeDecoder<LzBridgeState> {
  return getStructDecoder([
    ['pushInFlight', getBooleanDecoder()],
    ['padding', fixDecoderSize(getBytesDecoder(), 47)],
  ]);
}

export function getLzBridgeStateCodec(): FixedSizeCodec<
  LzBridgeStateArgs,
  LzBridgeState
> {
  return combineCodec(getLzBridgeStateEncoder(), getLzBridgeStateDecoder());
}
