/**
 * This code was AUTOGENERATED using the Codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun Codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getAddressDecoder,
  getAddressEncoder,
  getBooleanDecoder,
  getBooleanEncoder,
  getStructDecoder,
  getStructEncoder,
  getU16Decoder,
  getU16Encoder,
  getU64Decoder,
  getU64Encoder,
  getU8Decoder,
  getU8Encoder,
  type Address,
  type FixedSizeCodec,
  type FixedSizeDecoder,
  type FixedSizeEncoder,
} from '@solana/kit';

export type OFTStore = {
  oftType: number;
  ld2sdRate: bigint;
  tokenMint: Address;
  tokenEscrow: Address;
  endpointProgram: Address;
  bump: number;
  tvlLd: bigint;
  admin: Address;
  defaultFeeBps: number;
  paused: boolean;
};

export type OFTStoreArgs = {
  oftType: number;
  ld2sdRate: number | bigint;
  tokenMint: Address;
  tokenEscrow: Address;
  endpointProgram: Address;
  bump: number;
  tvlLd: number | bigint;
  admin: Address;
  defaultFeeBps: number;
  paused: boolean;
};

export function getOFTStoreEncoder(): FixedSizeEncoder<OFTStoreArgs> {
  return getStructEncoder([
    ['oftType', getU8Encoder()],
    ['ld2sdRate', getU64Encoder()],
    ['tokenMint', getAddressEncoder()],
    ['tokenEscrow', getAddressEncoder()],
    ['endpointProgram', getAddressEncoder()],
    ['bump', getU8Encoder()],
    ['tvlLd', getU64Encoder()],
    ['admin', getAddressEncoder()],
    ['defaultFeeBps', getU16Encoder()],
    ['paused', getBooleanEncoder()],
  ]);
}

export function getOFTStoreDecoder(): FixedSizeDecoder<OFTStore> {
  return getStructDecoder([
    ['oftType', getU8Decoder()],
    ['ld2sdRate', getU64Decoder()],
    ['tokenMint', getAddressDecoder()],
    ['tokenEscrow', getAddressDecoder()],
    ['endpointProgram', getAddressDecoder()],
    ['bump', getU8Decoder()],
    ['tvlLd', getU64Decoder()],
    ['admin', getAddressDecoder()],
    ['defaultFeeBps', getU16Decoder()],
    ['paused', getBooleanDecoder()],
  ]);
}

export function getOFTStoreCodec(): FixedSizeCodec<OFTStoreArgs, OFTStore> {
  return combineCodec(getOFTStoreEncoder(), getOFTStoreDecoder());
}
