/**
 * This code was AUTOGENERATED using the Codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun Codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getAddressDecoder,
  getAddressEncoder,
  getStructDecoder,
  getStructEncoder,
  getU128Decoder,
  getU128Encoder,
  getU64Decoder,
  getU64Encoder,
  getU8Decoder,
  getU8Encoder,
  type Address,
  type FixedSizeCodec,
  type FixedSizeDecoder,
  type FixedSizeEncoder,
} from '@solana/kit';

export type LocalToken = {
  custody: Address;
  mint: Address;
  burnLimitPerMessage: bigint;
  messagesSent: bigint;
  messagesReceived: bigint;
  amountSent: bigint;
  amountReceived: bigint;
  bump: number;
  custodyBump: number;
};

export type LocalTokenArgs = {
  custody: Address;
  mint: Address;
  burnLimitPerMessage: number | bigint;
  messagesSent: number | bigint;
  messagesReceived: number | bigint;
  amountSent: number | bigint;
  amountReceived: number | bigint;
  bump: number;
  custodyBump: number;
};

export function getLocalTokenEncoder(): FixedSizeEncoder<LocalTokenArgs> {
  return getStructEncoder([
    ['custody', getAddressEncoder()],
    ['mint', getAddressEncoder()],
    ['burnLimitPerMessage', getU64Encoder()],
    ['messagesSent', getU64Encoder()],
    ['messagesReceived', getU64Encoder()],
    ['amountSent', getU128Encoder()],
    ['amountReceived', getU128Encoder()],
    ['bump', getU8Encoder()],
    ['custodyBump', getU8Encoder()],
  ]);
}

export function getLocalTokenDecoder(): FixedSizeDecoder<LocalToken> {
  return getStructDecoder([
    ['custody', getAddressDecoder()],
    ['mint', getAddressDecoder()],
    ['burnLimitPerMessage', getU64Decoder()],
    ['messagesSent', getU64Decoder()],
    ['messagesReceived', getU64Decoder()],
    ['amountSent', getU128Decoder()],
    ['amountReceived', getU128Decoder()],
    ['bump', getU8Decoder()],
    ['custodyBump', getU8Decoder()],
  ]);
}

export function getLocalTokenCodec(): FixedSizeCodec<
  LocalTokenArgs,
  LocalToken
> {
  return combineCodec(getLocalTokenEncoder(), getLocalTokenDecoder());
}
