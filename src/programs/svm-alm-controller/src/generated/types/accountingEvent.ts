/**
 * This code was AUTOGENERATED using the Codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun Codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getAddressDecoder,
  getAddressEncoder,
  getOptionDecoder,
  getOptionEncoder,
  getStructDecoder,
  getStructEncoder,
  getU64Decoder,
  getU64Encoder,
  type Address,
  type Codec,
  type Decoder,
  type Encoder,
  type Option,
  type OptionOrNullable,
} from '@solana/kit';
import {
  getAccountingActionDecoder,
  getAccountingActionEncoder,
  getAccountingDirectionDecoder,
  getAccountingDirectionEncoder,
  type AccountingAction,
  type AccountingActionArgs,
  type AccountingDirection,
  type AccountingDirectionArgs,
} from '.';

export type AccountingEvent = {
  controller: Address;
  integration: Option<Address>;
  reserve: Option<Address>;
  mint: Address;
  action: AccountingAction;
  delta: bigint;
  direction: AccountingDirection;
};

export type AccountingEventArgs = {
  controller: Address;
  integration: OptionOrNullable<Address>;
  reserve: OptionOrNullable<Address>;
  mint: Address;
  action: AccountingActionArgs;
  delta: number | bigint;
  direction: AccountingDirectionArgs;
};

export function getAccountingEventEncoder(): Encoder<AccountingEventArgs> {
  return getStructEncoder([
    ['controller', getAddressEncoder()],
    ['integration', getOptionEncoder(getAddressEncoder())],
    ['reserve', getOptionEncoder(getAddressEncoder())],
    ['mint', getAddressEncoder()],
    ['action', getAccountingActionEncoder()],
    ['delta', getU64Encoder()],
    ['direction', getAccountingDirectionEncoder()],
  ]);
}

export function getAccountingEventDecoder(): Decoder<AccountingEvent> {
  return getStructDecoder([
    ['controller', getAddressDecoder()],
    ['integration', getOptionDecoder(getAddressDecoder())],
    ['reserve', getOptionDecoder(getAddressDecoder())],
    ['mint', getAddressDecoder()],
    ['action', getAccountingActionDecoder()],
    ['delta', getU64Decoder()],
    ['direction', getAccountingDirectionDecoder()],
  ]);
}

export function getAccountingEventCodec(): Codec<
  AccountingEventArgs,
  AccountingEvent
> {
  return combineCodec(getAccountingEventEncoder(), getAccountingEventDecoder());
}
