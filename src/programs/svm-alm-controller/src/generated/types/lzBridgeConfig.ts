/**
 * This code was AUTOGENERATED using the Codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun Codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  fixDecoderSize,
  fixEncoderSize,
  getAddressDecoder,
  getAddressEncoder,
  getBytesDecoder,
  getBytesEncoder,
  getStructDecoder,
  getStructEncoder,
  getU32Decoder,
  getU32Encoder,
  type Address,
  type FixedSizeCodec,
  type FixedSizeDecoder,
  type FixedSizeEncoder,
  type ReadonlyUint8Array,
} from '@solana/kit';

export type LzBridgeConfig = {
  program: Address;
  mint: Address;
  oftStore: Address;
  peerConfig: Address;
  oftTokenEscrow: Address;
  destinationAddress: Address;
  destinationEid: number;
  padding: ReadonlyUint8Array;
};

export type LzBridgeConfigArgs = LzBridgeConfig;

export function getLzBridgeConfigEncoder(): FixedSizeEncoder<LzBridgeConfigArgs> {
  return getStructEncoder([
    ['program', getAddressEncoder()],
    ['mint', getAddressEncoder()],
    ['oftStore', getAddressEncoder()],
    ['peerConfig', getAddressEncoder()],
    ['oftTokenEscrow', getAddressEncoder()],
    ['destinationAddress', getAddressEncoder()],
    ['destinationEid', getU32Encoder()],
    ['padding', fixEncoderSize(getBytesEncoder(), 28)],
  ]);
}

export function getLzBridgeConfigDecoder(): FixedSizeDecoder<LzBridgeConfig> {
  return getStructDecoder([
    ['program', getAddressDecoder()],
    ['mint', getAddressDecoder()],
    ['oftStore', getAddressDecoder()],
    ['peerConfig', getAddressDecoder()],
    ['oftTokenEscrow', getAddressDecoder()],
    ['destinationAddress', getAddressDecoder()],
    ['destinationEid', getU32Decoder()],
    ['padding', fixDecoderSize(getBytesDecoder(), 28)],
  ]);
}

export function getLzBridgeConfigCodec(): FixedSizeCodec<
  LzBridgeConfigArgs,
  LzBridgeConfig
> {
  return combineCodec(getLzBridgeConfigEncoder(), getLzBridgeConfigDecoder());
}
